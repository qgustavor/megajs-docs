"use strict";(self.webpackChunkmegajs_docs=self.webpackChunkmegajs_docs||[]).push([[190],{69:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>d,toc:()=>p});var t=o(4848),r=o(8453),a=o(1432);const s="import { Storage } from 'npm:megajs'\n\nconst email = prompt('Enter your email:')\nconst password = prompt('Enter your password (will be visible):')\n\nconst storage = await new Storage({ email, password }).ready\n\nconst folderName = prompt('Enter a folder name:')\nconst folderStat = await Deno.stat(folderName)\nif (!folderStat.isDirectory) throw Error('Not a directory!')\n\n// First create a folder\nconst megaFolder = await storage.mkdir(folderName)\n\n// Then upload files into it\nfor await (const entry of Deno.readDir(folderName)) {\n  const filePath = folderName + '/' + entry.name\n  const fileStat = await Deno.stat(filePath)\n  if (fileStat.isDirectory) {\n    throw Error('Recursive folder uploading was not implemented in this demo! Check the other one!')\n  }\n  const data = await Deno.readFile(filePath)\n  await megaFolder.upload({\n    name: entry.name,\n    forceHttps: false\n  }, data).complete\n}\n\nconsole.log('The folder was uploaded!', megaFolder)\n",i={},l="Folder uploading",d={id:"examples/folder-uploading",title:"Folder uploading",description:"This example is meant to be run using Deno. You can try by running this code at your console:",source:"@site/docs/examples/folder-uploading.md",sourceDirName:"examples",slug:"/examples/folder-uploading",permalink:"/docs/1.0/examples/folder-uploading",draft:!1,unlisted:!1,editUrl:"https://github.com/qgustavor/megajs-docs/tree/main/docs/examples/folder-uploading.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"File uploading",permalink:"/docs/1.0/examples/file-uploading"},next:{title:"File iterating",permalink:"/docs/1.0/examples/iterating-files"}},c={},p=[];function m(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"folder-uploading",children:"Folder uploading"}),"\n",(0,t.jsx)(n.p,{children:"This example is meant to be run using Deno. You can try by running this code at your console:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"deno run https://mega.js.org/demos/folder-uploading-demo.js\n"})}),"\n","\n",(0,t.jsx)(a.A,{language:"js",children:s})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>i});var t=o(6540);const r={},a=t.createContext(r);function s(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);