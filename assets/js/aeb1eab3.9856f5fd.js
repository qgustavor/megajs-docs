"use strict";(self.webpackChunkmegajs_docs=self.webpackChunkmegajs_docs||[]).push([[765],{5884:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>d,toc:()=>h});var i=t(4848),o=t(8453),r=t(1432);const s="import { File } from 'npm:megajs'\n\n// Get the shared file URL\nconst url = prompt('Enter the URL of a shared MEGA file or folder:')\n\n// Create a File object\nconst mainFile = File.fromURL(url)\n\n// Setup an user-agent\nmainFile.api.userAgent = 'MEGAJS-Demos (+https://mega.js.org/)'\n\n// Load attributes and get the selected file\nlet selectedFile = await mainFile.loadAttributes()\nif (!selectedFile) throw Error('File not found!')\n\n// For links of folders pointing to a specific file the mainFile\n// will point to the folder and the selectedFile will point to\n// the file, for all other cases those two variables will be the same\n\n// Handle directories:\nif (selectedFile.children) {\n  console.log('It points to a directory, downloading the first file:')\n  const firstChild = selectedFile.find(node => !node.children, true)\n  if (!firstChild) throw Error('Folder have no children!')\n  selectedFile = firstChild\n}\n\nconsole.log('File info:')\nconsole.log(selectedFile)\n\n// You need to set forceHttps to false in order to make\n// Deno connect to the unsafe MEGA download servers\n// (which use out-of-date TLS configurations)\n// That's not needed in Node.js nor in browsers\nconst downloadStream = await selectedFile.download({ forceHttps: false })\n\n// Open file for writing and get the writer\nconst denoFile = await Deno.create(selectedFile.name)\nconst writer = denoFile.writable.getWriter()\n\n// Iterate the download stream and write to the file\nfor await (const data of downloadStream) {\n  await writer.write(data)\n}\n\n// Finally close the writer\nawait writer.close()\n",a={sidebar_position:2.014},l="Shared file streaming",d={id:"examples/shared-file-streaming",title:"Shared file streaming",description:'This combines the knowledge of "File downloading while streaming" with the one from "Shared file downloading".',source:"@site/docs/examples/shared-file-streaming.md",sourceDirName:"examples",slug:"/examples/shared-file-streaming",permalink:"/docs/1.0/examples/shared-file-streaming",draft:!1,unlisted:!1,editUrl:"https://github.com/qgustavor/megajs-docs/tree/main/docs/examples/shared-file-streaming.md",tags:[],version:"current",sidebarPosition:2.014,frontMatter:{sidebar_position:2.014},sidebar:"tutorialSidebar",previous:{title:"File downloading while streaming",permalink:"/docs/1.0/examples/file-streaming"},next:{title:"Advanced file downloader",permalink:"/docs/1.0/examples/advanced-file-downloader"}},c={},h=[];function f(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"shared-file-streaming",children:"Shared file streaming"}),"\n",(0,i.jsx)(n.p,{children:'This combines the knowledge of "File downloading while streaming" with the one from "Shared file downloading".'}),"\n",(0,i.jsx)(n.p,{children:"You can try by running this code at your console:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"deno run https://mega.js.org/demos/shared-streaming-demo.js\n"})}),"\n","\n",(0,i.jsx)(r.A,{language:"js",children:s})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(f,{...e})}):f(e)}}}]);