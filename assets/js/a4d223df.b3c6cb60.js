"use strict";(self.webpackChunkmegajs_docs=self.webpackChunkmegajs_docs||[]).push([[6377],{6585:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>c,contentTitle:()=>d,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=n(4848),t=n(8453),a=n(1432);const s="import { getLoggedInStorage } from './logging-in-demo.js'\nconst storage = await getLoggedInStorage()\n\nconst folderName = prompt('Enter a folder name:')\nconst folderStat = await Deno.stat(folderName)\nif (!folderStat.isDirectory) throw Error('Not a directory!')\n\nasync function handleFolder (path, name, rootNode) => {\n  // Create a folder on the remote node\n  const megaFolder = await rootNode.mkdir(name)\n\n  // Then upload files into it\n  for await (const entry of Deno.readDir(path)) {\n    const filePath = path + '/' + entry.name\n    const fileStat = await Deno.stat(filePath)\n\n    // If the file is a directory, just recurse\n    if (fileStat.isDirectory) {\n      await handleFolder(filePath, entry.name, megaFolder)\n    } else {\n      const data = await Deno.readFile(filePath)\n      await megaFolder.upload({\n        name: entry.name,\n        // You need to set forceHttps to false in order to make\n        // Deno connect to the unsafe MEGA upload servers\n        // (which use out-of-date TLS configurations)\n        // That's not needed in Node.js nor in browsers\n        forceHttps: false\n      }, data).complete\n    }\n  }\n}\n\nawait handleFolder(folderName, folderName, storage.children)\nconsole.log('The folder was uploaded!', megaFolder)\n",i={sidebar_position:2.011},d="Recursive folder uploading",l={id:"examples/recursive-folder-uploading",title:"Recursive folder uploading",description:"You can try by running this code at your console:",source:"@site/docs/examples/recursive-folder-uploading.md",sourceDirName:"examples",slug:"/examples/recursive-folder-uploading",permalink:"/docs/1.0/examples/recursive-folder-uploading",draft:!1,unlisted:!1,editUrl:"https://github.com/qgustavor/megajs-docs/tree/main/docs/examples/recursive-folder-uploading.md",tags:[],version:"current",sidebarPosition:2.011,frontMatter:{sidebar_position:2.011},sidebar:"tutorialSidebar",previous:{title:"Folder uploading",permalink:"/docs/1.0/examples/folder-uploading"},next:{title:"File uploading while streaming",permalink:"/docs/1.0/examples/file-uploading-stream"}},c={},u=[];function p(e){const o={code:"code",h1:"h1",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.h1,{id:"recursive-folder-uploading",children:"Recursive folder uploading"}),"\n",(0,r.jsx)(o.p,{children:"You can try by running this code at your console:"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-bash",children:"deno run https://mega.js.org/demos/recursive-folder-uploading-demo.js\n"})}),"\n","\n",(0,r.jsx)(a.A,{language:"js",children:s})]})}function m(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,r.jsx)(o,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);