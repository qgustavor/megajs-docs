"use strict";(self.webpackChunkmegajs_docs=self.webpackChunkmegajs_docs||[]).push([[983],{930:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>l,metadata:()=>d,toc:()=>f});var o=t(4848),i=t(8453),s=t(1432);const a="import { File } from 'npm:megajs'\n\n// Get the shared file URL\nconst url = prompt('Enter the URL of a shared MEGA file or folder:')\n\n// Create a File object\nconst mainFile = File.fromURL(url)\n\n// Setup an user-agent\nmainFile.api.userAgent = 'MEGAJS-Demos (+https://mega.js.org/)'\n\n// Load attributes and get the selected file\nconst selectedFile = await mainFile.loadAttributes()\n\n// For links of folders pointing to a specific file the mainFile\n// will point to the folder and the selectedFile will point to\n// the file, for all other cases those two variables will be the same\n\nconsole.log('File info:')\nconsole.log(selectedFile)\n\nif (selectedFile.children) {\n  console.log('It points to a directory, downloading the first file:')\n  const firstChild = selectedFile.find(node => !node.children, true)\n  if (!firstChild) throw Error('Folder have no children!')\n  const data = await firstChild.downloadBuffer({ forceHttps: false })\n  await Deno.writeFile(firstChild.name, data)\n} else {\n  const data = await selectedFile.downloadBuffer({ forceHttps: false })\n  await Deno.writeFile(selectedFile.name, data)\n}\n",l={sidebar_position:2.008},r="Shared file downloading",d={id:"examples/shared-file-downloading",title:"Shared file downloading",description:"You can try by running this code at your console:",source:"@site/docs/examples/shared-file-downloading.md",sourceDirName:"examples",slug:"/examples/shared-file-downloading",permalink:"/docs/1.0/examples/shared-file-downloading",draft:!1,unlisted:!1,editUrl:"https://github.com/qgustavor/megajs-docs/tree/main/docs/examples/shared-file-downloading.md",tags:[],version:"current",sidebarPosition:2.008,frontMatter:{sidebar_position:2.008},sidebar:"tutorialSidebar",previous:{title:"File downloading",permalink:"/docs/1.0/examples/file-downloading"},next:{title:"File iterating",permalink:"/docs/1.0/examples/iterating-files"}},c={},f=[];function h(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"shared-file-downloading",children:"Shared file downloading"}),"\n",(0,o.jsx)(n.p,{children:"You can try by running this code at your console:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"deno run https://mega.js.org/demos/shared-downloading-demo.js\n"})}),"\n","\n",(0,o.jsx)(s.A,{language:"js",children:a})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var o=t(6540);const i={},s=o.createContext(i);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);