"use strict";(self.webpackChunkmegajs_docs=self.webpackChunkmegajs_docs||[]).push([[248],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return f}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=o.createContext({}),s=function(e){var n=o.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return o.createElement(d.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},p=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,d=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=s(t),f=r,m=p["".concat(d,".").concat(f)]||p[f]||u[f]||a;return t?o.createElement(m,l(l({ref:n},c),{},{components:t})):o.createElement(m,l({ref:n},c))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,l=new Array(a);l[0]=p;var i={};for(var d in n)hasOwnProperty.call(n,d)&&(i[d]=n[d]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<a;s++)l[s]=t[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}p.displayName="MDXCreateElement"},1374:function(e,n,t){t.d(n,{Z:function(){return i}});var o=t(7294),r=t(1736),a=t(9877),l=t(8215);t(2263);function i(e){var n=e.version||"0",t=["Node ESM","Node CJS",parseInt(n.split(".")[0])>0?"Browser/Deno":"Browser"],i=[function(e){return e.replace(/\/\/ node2deno:if-deno\n.*\n?/g,"").replace(/\/\/ node2deno:if-node\n/g,"")},function(e){return(e=e.replace(/\/\/ node2deno:if-deno\n.*\n?/g,"").replace(/\/\/ node2deno:if-node\n/g,"")).includes("await ")&&(e=e.replace(/^(?!import|$)/gm,"  ").replace(/^\s*$/m,"\n// Node doesn't support top-level await when using CJS\n;(async function () {").replace(/\n*$/,"\n}()).catch(error => {\n  console.error(error)\n  process.exit(1)\n})\n")),e=e.replace(/import (.+?) from 'megajs'/g,"const $1 = require('megajs')")},function(e){return e.replace(/import (.+?) from 'megajs'/g,'// @deno-types="https://cdn.skypack.dev/megajs@'+n+"/types/es.d.ts\"\nimport $1 from 'https://cdn.skypack.dev/megajs@"+n+"'").replace(/\/\/ node2deno:if-node\n.*\n/g,"").replace(/\/\/ node2deno:if-deno\n/g,"")}];return o.createElement("div",null,o.createElement(a.Z,{groupId:"node2deno",className:"margin-bottom--sm"},t.map((function(n,t){return o.createElement(l.Z,{value:t,label:n,onClick:function(){return setMode(t)},key:"+"+t},o.createElement(r.Z,{language:e.language},i[t](e.code)))}))))}},1776:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return d},metadata:function(){return c},toc:function(){return p}});var o=t(7462),r=t(3366),a=(t(7294),t(3905)),l=t(1374),i=["components"],d={sidebar_position:6},s="Downloading files",c={unversionedId:"tutorial/downloading",id:"tutorial/downloading",title:"Downloading files",description:"To share a download you call .downloadBuffer() or .download() on the file object:",source:"@site/docs/tutorial/downloading.md",sourceDirName:"tutorial",slug:"/tutorial/downloading",permalink:"/docs/next/tutorial/downloading",editUrl:"https://github.com/qgustavor/megajs-docs/tree/master/docs/tutorial/downloading.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Handling files",permalink:"/docs/next/tutorial/handling-files"},next:{title:"Interrupted downloads",permalink:"/docs/next/tutorial/interrupted-downloads"}},u={},p=[],f={toc:p};function m(e){var n=e.components,t=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"downloading-files"},"Downloading files"),(0,a.kt)("p",null,"To share a download you call ",(0,a.kt)("inlineCode",{parentName:"p"},".downloadBuffer()")," or ",(0,a.kt)("inlineCode",{parentName:"p"},".download()")," on the file object:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// Using promises\nconst data = await file.downloadBuffer()\n\n// data is a Buffer containing the file contents\nconsole.log(data)\n\n// Using callbacks\nfile.downloadBuffer((error, data) => {\n  if (error) console.error(error)\n  console.log(data)\n})\n")),(0,a.kt)("p",null,"If you use ",(0,a.kt)("inlineCode",{parentName:"p"},".download()")," then you can also download files using Node streams either via pipes..."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const stream = file.download()\nstream.on('error', error => console.error(error))\nstream.pipe(fs.createWriteStream(file.name))\n")),(0,a.kt)("p",null,"... or by listening data events:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const stream = file.download()\nstream.on('error', error => console.error(error))\nstream.on('data', data => console.log(data))\n")),(0,a.kt)("p",null,"Those are useful when dealing with huge files as ",(0,a.kt)("inlineCode",{parentName:"p"},".downloadBuffer()")," stores the entire file in memory. In the other hand, because of that, ",(0,a.kt)("inlineCode",{parentName:"p"},".download()")," can't return a promise. Also, you can still use callbacks with ",(0,a.kt)("inlineCode",{parentName:"p"},".download()")," like in V0."),(0,a.kt)("p",null,"You can download shared files by loading those from their URL instead of loading from the Storage class:"),(0,a.kt)(l.Z,{language:"js",code:"import { File } from 'megajs'\n\n// Get the file object from the URL\nconst file = File.fromURL('https://mega.nz/file/example#example')\n\n// Load file attributes\nawait file.loadAttributes()\n\n// Then finally download the file like usual\nconst data = await file.downloadBuffer()\nconsole.log(data)",version:"1",mdxType:"CodeBlockSwitchable"}),(0,a.kt)("p",null,"Shared files loaded using ",(0,a.kt)("inlineCode",{parentName:"p"},"File.fromURL")," don't have attributes - such as name and size - loaded by default, that's why ",(0,a.kt)("inlineCode",{parentName:"p"},"loadAttributes")," is called. If you don't need those attributes, just file contents, you can download the file directly using ",(0,a.kt)("inlineCode",{parentName:"p"},".download()"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// Will download the data without having to load attributes\nconst data = await File.fromURL('https://mega.nz/file/example#example').downloadBuffer()\nconsole.log(data)\n")),(0,a.kt)("p",null,"Shared folders can also be loaded using ",(0,a.kt)("inlineCode",{parentName:"p"},"File.fromURL")," and will behave like folders in ",(0,a.kt)("inlineCode",{parentName:"p"},"Storage"),": once their attributes are loaded they will have a ",(0,a.kt)("inlineCode",{parentName:"p"},".children")," property with an array of File objects which can be downloaded."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// Get the folder object from the URL\nconst folder = File.fromURL('https://mega.nz/folder/example#example')\n\n// Load folder attributes\nawait folder.loadAttributes()\n\n// Download a file from the folder\nconst file = folder.children.find(file => file.name === 'hello-world.txt')\nconst data = await file.downloadBuffer()\nconsole.log(data)\n")),(0,a.kt)("p",null,"When opening shared folders in MEGA you can right-click some file and get a file pointing to a specific file in the folder. This library recognizes those kind of links and allow loading the file specified. To make it work get the file from the promise, like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// Get the folder object from the URL\nconst folder = File.fromURL('https://mega.nz/folder/example#example/file/example')\n\n// Load the file from the folder specified by /file/example in the URL\nconst file = await folder.loadAttributes()\n\n// And download it\nconst data = await file.downloadBuffer()\nconsole.log(data)\n")),(0,a.kt)("p",null,"Like V0 ",(0,a.kt)("inlineCode",{parentName:"p"},".loadAttributes()")," will still accept a callback. The file specified by the URL will be returned in the second argument:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"folder.loadAttributes((error, file) => {})\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"download")," function also allows using a custom ",(0,a.kt)("inlineCode",{parentName:"p"},"handleRetries")," function:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"await file.download(\n  handleRetries: (tries, error, cb) => {\n    if (tries > 8) {\n      // Give up after eight retries\n      cb(error)\n    } else {\n      // Wait some time then try again\n      setTimeout(cb, 1000 * Math.pow(2, tries))\n    }\n  }\n}).complete\n")),(0,a.kt)("p",null,"You can replace the default retry handling function by overriding ",(0,a.kt)("inlineCode",{parentName:"p"},"File.defaultHandleRetries")," like this:"),(0,a.kt)(l.Z,{language:"js",code:"import { File } from 'megajs'\n\nFile.defaultHandleRetries = (tries, error, cb) => {\n  if (tries > 8) {\n    // Give up after eight retries\n    cb(error)\n  } else {\n    // Wait some time then try again\n    setTimeout(cb, 1000 * Math.pow(2, tries))\n  }\n}",version:"1",mdxType:"CodeBlockSwitchable"}),(0,a.kt)("p",null,"The function in ",(0,a.kt)("inlineCode",{parentName:"p"},"File.defaultHandleRetries")," is also the default function used by ",(0,a.kt)("inlineCode",{parentName:"p"},"upload()"),"."),(0,a.kt)("p",null,"The last part of the tutorial is handling interrupted downloads."))}m.isMDXComponent=!0}}]);