"use strict";(self.webpackChunkmegajs_docs=self.webpackChunkmegajs_docs||[]).push([[6433],{761:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>g});var s=o(4848),t=o(8453),a=o(1432);const i="import { getLoggedInStorage } from './logging-in-demo.js'\nconst storage = await getLoggedInStorage()\n\nconst name = prompt('Enter a file name:')\nconst data = await Deno.readFile(name)\n\n// You need to set forceHttps to false in order to make\n// Deno connect to the unsafe MEGA upload servers\n// (which use out-of-date TLS configurations)\n// That's not needed in Node.js nor in browsers\nconst file = await storage.upload({ name, forceHttps: false }, data).complete\nconsole.log('The file was uploaded!', file)\n",r={sidebar_position:2.002},l="File uploading",d={id:"examples/file-uploading",title:"File uploading",description:"You can try by running this code at your console:",source:"@site/docs/examples/file-uploading.md",sourceDirName:"examples",slug:"/examples/file-uploading",permalink:"/docs/1.0/examples/file-uploading",draft:!1,unlisted:!1,editUrl:"https://github.com/qgustavor/megajs-docs/tree/main/docs/examples/file-uploading.md",tags:[],version:"current",sidebarPosition:2.002,frontMatter:{sidebar_position:2.002},sidebar:"tutorialSidebar",previous:{title:"Logging-in",permalink:"/docs/1.0/examples/logging-in"},next:{title:"File searching",permalink:"/docs/1.0/examples/file-searching"}},c={},g=[];function p(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"file-uploading",children:"File uploading"}),"\n",(0,s.jsx)(n.p,{children:"You can try by running this code at your console:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"deno run https://mega.js.org/demos/uploading-demo.js\n"})}),"\n","\n",(0,s.jsx)(a.A,{language:"js",children:i})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}}}]);